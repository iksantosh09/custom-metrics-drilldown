Requirements
============

Cuanto requires an application server running Java 1.5 or greater and a SQL database with a JDBC driver. Development
and testing have been done against a Jetty/MySQL combination. MySQL with InnoDB is strongly recommended, as the database
upgrade scripts provided are for MySQL.

Customizing cuanto-db.groovy

Edit cuanto-db.groovy with a text editor.  You'll see a section like this:
		production {
			dataSource {
				username = "my_sql_user"
				password = "my_sql_password"
				driverClassName = "com.mysql.jdbc.Driver"
				url = "jdbc:mysql://my_sql_server:3306/cuanto?autoreconnect=true"
			}
		}

Edit the username, password, driverClassName and url to correspond to the correct values for your database
credentials, JDBC driver and the JDBC URL for your SQL server.  Make sure you edit the "production" section.


Deploying the application
=========================

Unzip the WAR into your application server's webapps directory into a subdirectory named "cuanto". Copy the
cuanto-db.groovy you customized into the cuanto/WEB-INF/classes directory.  Put your JDBC driver in the
cuanto/WEB-INF/lib directory.

The application should be ready to run now -- start your application server and go to the appropriate URL
for cuanto (this will depend on how you've deployed it). Go to the root Cuanto URL and click on the 'Help' menu
link to read about how to use Cuanto.

If you'd like to run Cuanto at the root context, you'll need to consult the documentation for your application server.
For Jetty, it involves adding a jetty-web.xml file to WEB-INF.


Upgrading
=========
If you are upgrading, shut down Cuanto and back up your database first.

If you are upgrading from 2.7.1, then execute upgrade_to_2.8.0.sql. This may take a number of minutes depending on the
size of your cuanto database's test_outcome table.

If you are upgrading from 2.6.6, then execute add_skips_2.7.sql and add_testoutcome_props_and_links_2.7.sql. After
starting Cuanto, all of the test run statistics will be recalculated, and skips will be tracked separately from failures.
It takes about one second per existing test run to update the statistics, so it may take a while for all of them to be
updated. Cuanto is still usable while they are being recalculated.

If you are upgrading from 2.6.0 - 2.6.5, please execute change_test_run_stats_2.6.6.sql, changing the FKNAME as described
in the script. Then execute the subsequent scripts above.

If you are upgrading from 2.5, you'll want to execute the init_test_outcome_summary.sql script found in the sql directory.
Please note, if you are using a default MySQL installation, this script may not run successfully unless you increase the size
of the MySQL innodb_buffer_pool_size variable beyond the default 8MB (100MB+ is good). You can do this directly in MySQL's
admin tool or permanently by setting the value in my.cnf:

[mysqld]
innodb_buffer_pool_size = 100M

In addition, execute init_test_outcome_summary.sql and add_test_output_summary_idx.sql for optimal performance.

Restart the MySQL server for the change to take effect.

If you are upgrading from an existing Cuanto installation that is earlier than 2.4, you'll want to execute the SQL scripts
found in the sql directory. These scripts have been tested on MySQL with the InnoDB engine, tweaks may be needed if using
a different database configuration.

If you are upgrading from 2.2.5 or earlier, execute the upgrade_to_2.3.1.sql script followed by upgrade_to_2.4.sql.

If you are upgrading from 2.3.0 or 2.3.1, execute the upgrade_to_2.4.sql script.

All upgrades require executing the groovy script migrate_test_run_props_for_2.4.groovy. You need to have a recent
version of groovy installed (1.6 or greater recommended) and have your mySQL driver in your class path. Open the script
with your favorite editor and customize the username, password, driverClassName and JDBC url for your installation.
Then execute the script.

Each of these scripts may take a substantial time to complete. With the MySql instance on the author's MacBook (2.4 Ghz
Intel with 4GB RAM) using a database with 1845 test_run rows and 751495 test_outcome rows, the scripts had the following
execution timings:

upgrade_to_2.3.1.sql                   appx 20 minutes
upgrade_to_2.4.sql                     appx 41 minutes
migrate_test_run_props_for_2.4.groovy  appx 18 seconds

Of course, your average mySql server used in production is much more capable then this humble author's laptop, so these
figures will almost certainly be better for you.

Once these scripts are executed, copy the cuanto-db.groovy file from your existing installation -- probably in
<appserver>/webapps/cuanto/WEB-INF/classes.  Then delete (or move) the existing webapp and unzip the new Cuanto war
 in the cuanto directory (or whatever context you're using). Copy cuanto-db.groovy back to you new
 directory under WEB-INF/classes. Then you're ready to start up Cuanto again.

The first time starting Cuanto with the new webapp (after an upgrade from pre-2.4), it may take a substantial amount of time to start up, as some
additional database updates are done automatically. It took 43 minutes on a MacBook running Cuanto and MySql.
